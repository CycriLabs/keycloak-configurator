services:
  database:
    image: postgres:${VERSION_POSTGRES}
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
    ports:
      - ${DB_PORT:-5432}:5432
    volumes:
      - ./postgres-init-user-db.sql:/docker-entrypoint-initdb.d/init-users.sql:Z
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: ghcr.io/cycrilabs/keycloak:${VERSION_KEYCLOAK}
    links:
      - database
    depends_on:
      database:
        condition: service_healthy
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_USER:-keycloak}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_PASSWORD:-root}
      KC_DB_URL: ${KC_DB_URL:-jdbc:postgresql://database/keycloak}
      KC_DB_SCHEMA: keycloak
      KC_DB_USERNAME: ${KC_DB_USERNAME:-keycloak}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-password}
      # the following properties are required for optimized mode in development env
      # do not add KC_HOSTNAME: localhost, otherwise an error is thrown in browser
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
    command: [ "start", "--optimized" ]
    ports:
      - ${KC_PORT:-8080}:8080
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/9000; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:9000\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $$ERROR'
        ]
      interval: 5s
      timeout: 5s
      retries: 15
