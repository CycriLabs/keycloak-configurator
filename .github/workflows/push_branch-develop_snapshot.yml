name: Backend - Develop - Publish snapshot on push

on:
  push:
    branches:
      - develop

env:
  java-version: '21'
  distribution: 'graalvm'
  IMAGE_NAME: ghcr.io/cycrilabs/keycloak-configurator

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout [${{ github.head_ref || github.ref_name }}]
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: ${{ env.distribution }}
          java-version: ${{ env.java-version }}
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Adapt maven settings
        uses: s4u/maven-settings-action@v2
        with:
          servers: '[{"id": "github", "username": "dummy", "password": "${{ secrets.GITHUB_TOKEN }}"}]'
          githubServer: false

      - name: Start containers
        run: chmod +x ./cli.sh && ./cli.sh --start

      - name: Test
        run: mvn -B verify -Pgithub

      - name: Stop containers
        if: always()
        run: chmod +x ./cli.sh && ./cli.sh --stop

  build-container-image:
    needs: test
    strategy:
      matrix:
        architecture: [amd64, arm64]
        include:
          - architecture: amd64
            runner: ubuntu-24.04
          - architecture: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout [${{ github.head_ref || github.ref_name }}]
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: ${{ env.distribution }}
          java-version: ${{ env.java-version }}
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Adapt maven settings
        uses: s4u/maven-settings-action@v2
        with:
          servers: '[{"id": "github", "username": "dummy", "password": "${{ secrets.GITHUB_TOKEN }}"}]'
          githubServer: false

      - name: Deploy project & image
        run: >
          mvn -B package -Pgithub -DskipTests
          -Dquarkus.container-image.tag=latest-${{ matrix.architecture }}
          -Dquarkus.container-image.build=true
          -Dquarkus.jib.platforms=linux/${{ matrix.architecture }}
          -Dquarkus.container-image.push=true
          -Dquarkus.container-image.registry=ghcr.io
          -Dquarkus.container-image.username=${{ github.actor }}
          -Dquarkus.container-image.password=${{ secrets.GITHUB_TOKEN }}

  create-manifest:
    needs: build-container-image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and Push Manifest
        run: |
          IMAGE_WITHOUT_TAG=${IMAGE_NAME#*/}

          # Create the manifest
          docker manifest create ghcr.io/${IMAGE_WITHOUT_TAG}:latest \
            ghcr.io/${IMAGE_WITHOUT_TAG}:latest-amd64 \
            ghcr.io/${IMAGE_WITHOUT_TAG}:latest-arm64

          # Add platform-specific annotations
          docker manifest annotate ghcr.io/${IMAGE_WITHOUT_TAG}:latest \
            ghcr.io/${IMAGE_WITHOUT_TAG}:latest-amd64 --os linux --arch amd64
          docker manifest annotate ghcr.io/${IMAGE_WITHOUT_TAG}:latest \
            ghcr.io/${IMAGE_WITHOUT_TAG}:latest-arm64 --os linux --arch arm64

          # Push the manifest
          docker manifest push ghcr.io/${IMAGE_WITHOUT_TAG}:latest
